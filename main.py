# https://www.mnassa.org.za/html/Oct2017/2017MNASSA..76..Oct..215.pdf## I = 3.719 x 10^(-9-0.4*M)  W/m2s2## 1 W/m2 = 1 W/10^4 cm2 = 10^-4 W/cm2 = 100 uW/cm2## I = 3.719 x 10^(-7-0.4*M)  uW/cm2s2## from datasheet: at gain = 400 and T = 100 ms, 264 counts / uW/cm2# this conversion is done in tsl2591.calculate_light()# # log (I) = log (3.719) - 7 - 0.4 M## M = -16.07 - 2.5*log(C)import tsl2591import timeimport mathtsl = tsl2591.Tsl2591(1,2)tsl.set_gain(tsl2591.GAIN_MED)tsl.set_timing(tsl2591.INTEGRATIONTIME_300MS)def web_page():    M0 = -16.07    GA = 5  # this is a glass attenuation factor, depends on what's in front of the detector. Guesstimate    full, ir = tsl.advanced_read()    full_C, ir_C = tsl.calculate_light(full, ir)#    lux = tsl.read_low_lux()#    d0_r = '{0:5d}'.format(full)#    d1_r = '{0:5d}'.format(ir)#    dataf = '{0:.6f}'.format(full_C)#    datai = '{0:.6f}'.format(ir_C)    if ((full_C - ir_C) != 0):        mpsas = M0 + GA -2.5*math.log10(full_C - ir_C)    else:        mpsas = -25.#    if (lux < 0.1):#        lux = lux*1000000#        unit = 'uLux'#    else:#        unit = 'Lux'#    datal = '{0:.4f}'.format(lux)    datal = '{0:.2f}'.format(mpsas)    unit = 'M/arcsec2'    html = """<html><head> <title>SQM Web Server</title>    <meta name="viewport" content="width=device-width, initial-scale=1">    <link rel="icon" href="data:,"> <style>html{font-family: Helvetica; display:inline-block; margin: 0px auto; text-align: center;}    h1{color: #0F3376; padding: 2vh;}p{font-size: 1.5rem;}    .button{display: inline-block; background-color: #e7bd3b; border: none; border-radius: 4px; color: white; padding: 10px 20px; text-decoration: none; font-size: 20px; margin: 2px; cursor: pointer;}    .button2{background-color: #4286f4;}</style></head>    <body><h1>SKY QUALITY METER</h1>    <p><h2>TSL2591-ESP32</h2></p>    <p><a href="/?tsl">Light level: """ + datal + """ """ + unit + """</a></p>    <p>(click on the light level to update)</p>    </body>    </html>"""    return htmls = socket.socket(socket.AF_INET, socket.SOCK_STREAM)s.bind(('', 80))s.listen(5)while True:  conn, addr = s.accept()  print('Got a connection from %s' % str(addr))  request = conn.recv(1024)  request = str(request)  print('Content = %s' % request)  response = web_page()  conn.send('HTTP/1.1 200 OK\n')  conn.send('Content-Type: text/html\n')  conn.send('Connection: close\n\n')  conn.sendall(response)  conn.close()